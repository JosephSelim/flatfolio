services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - backend
    env_file:
      - .env
    environment:
      - BACKEND_URL=http://localhost:${BACKEND_PORT}

volumes:
  pgdata:
